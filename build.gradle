/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
	id "com.diffplug.spotless" version "5.15.0"
	id 'net.ltgt.errorprone' version "2.0.2"
	id 'application'
	id 'com.github.johnrengelman.shadow' version '7.0.0'
	id "org.mikeneck.graalvm-native-image" version "1.4.1"
}

repositories {
	maven {
		url = uri('https://repo.maven.apache.org/maven2/')
	}

	mavenLocal()
	maven {
		url = 'https://jitpack.io'
	}
}

dependencies {
	implementation 'com.diffplug.spotless:spotless-maven-plugin:2.12.2'
	implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'
	implementation 'com.github.mosimengine:refactorlizar:master-SNAPSHOT'
	implementation 'fr.inria.gforge.spoon:spoon-core:9.0.0'
	implementation 'info.picocli:picocli:4.6.1'
	implementation group: 'com.google.flogger', name: 'flogger', version: '0.6'
	implementation group: 'com.google.flogger', name: 'flogger-system-backend', version: '0.6'
	annotationProcessor 'info.picocli:picocli-codegen:4.6.1'
	errorprone("com.google.errorprone:error_prone_core:2.7.1")
}

group = 'edu.kit.kastel.dsis.mosim.refactorlizar'
version = '0.0.2-SNAPSHOT'
description = 'analysiscli'
sourceCompatibility = '1.11'

mainClassName = "edu.kit.kastel.dsis.mosim.refactorlizar.analysiscli.AnalysisCLI"
spotless {
	java {
		target "**/*.java"
		targetExclude "**/test/resources/**", "**/build/**"
		trimTrailingWhitespace()
		removeUnusedImports()
		googleJavaFormat().aosp()
	}
	groovy {
		target "**/*.gradle"
		// Use the default version and Groovy-Eclipse default configuration
		greclipse()
	}
}

compileJava {
	options.compilerArgs += [
		"-Aproject=${project.group}/${project.name}"
	]
}
import org.mikeneck.graalvm.BuildTypeSelector


configurations {
	// to remove too long jar path, prepare empty configuration
	emptyConfiguration
}

// copies jar files for manifest can refer to dependencies
task copyDependencies(type: Copy, group: 'build') {
	from configurations.runtimeClasspath
	destinationDir = file("$buildDir/libs")
	duplicatesStrategy = 'include'
}

jar {
	dependsOn 'copyDependencies'
	manifest {
		// entry jar files via Class-Path attribute
		def classpathString = configurations.runtimeClasspath.collect { File f -> f.name }.join(' ')
		attributes 'Class-Path': classpathString
	}
}

nativeImage {
	// remove jar's paths from command
	runtimeClasspath = configurations.emptyConfiguration
	graalVmHome = System.getProperty('java.home')
	buildType { BuildTypeSelector build ->
		build.executable {
			main = 'edu.kit.kastel.dsis.mosim.refactorlizar.analysiscli.AnalysisCLI'
		}
	}
	executableName = 'analysiscli'
	outputDirectory = file("$buildDir/bin")
	arguments {
		add '--no-fallback'
		add '--enable-all-security-services'
		add '--initialize-at-build-time'
		add '--initialize-at-run-time=org.codehaus.groovy.control.XStreamUtils,groovy.grape.GrapeIvy'
		add '--report-unsupported-elements-at-runtime'
		add '--allow-incomplete-classpath'
		add '-H:IncludeResources=org.eclipse.jdt.internal.compiler.*'
	}
}

distributions {
	main {
		distributionBaseName = 'refactorlizar-analysiscli'
		contents {
			duplicatesStrategy = DuplicatesStrategy.EXCLUDE
		}
	}
}